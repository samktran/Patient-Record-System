{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khsam\\\\Documents\\\\React Projects\\\\assignment-two\\\\my-react-app\\\\src\\\\PatientPanel.js\";\nimport React, { useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction PatientPanel() {\n  const [resData, setData] = React.useState([]);\n  const [patientName, setPatientName] = React.useState(\"\");\n  const [treatID, setTreatID] = React.useState(\"\");\n  const [category, setCategory] = React.useState(\"\");\n\n  function fetchPatientRecords() {\n    axios.get(\"http://localhost:8080/patients\").then(response => {\n      // handle success\n      useEffect(() => {\n        const resData = response.data;\n        setData(resData);\n      }, []); // let data = JSON.stringify(resData);\n      // window.alert(\"Response recieved from server = \" + data);\n    });\n\n    const showDetails = x => {\n      setPatientName(x);\n    };\n  } // function showPatientRecords() {\n  //   axios.get(\"http://localhost:8080/patients\").then((response) => {\n  //     var resData = response.data;\n  //     let data = JSON.parse(resData);\n  //     const showRecords = data.map((datas) => (\n  //       <li>\n  //         {datas.name},{datas.treatID},{datas.category}\n  //       </li>\n  //     ));\n  //     //   return showRecords();\n  //   });\n  // }\n\n\n  function savePatient() {\n    const value = {\n      name: patientName,\n      treatID: treatID,\n      category: category\n    };\n    axios.post(\"http://localhost:8080/patient\", value).then(response => {\n      // handle success\n      var resData = response.data;\n      let data = JSON.stringify(resData);\n      window.alert(\"Response recieved from server = \" + data);\n    });\n  }\n\n  function deletePatient() {\n    axios.delete(`http://localhost:8080/deletePatient/${patientName}`).then(response => {\n      // handle success\n      var resData = response.data;\n      let data = JSON.stringify(resData);\n      window.alert(\"Response recieved from server = \" + data);\n    });\n  }\n\n  function updatePatient() {\n    const value = {\n      name: patientName,\n      treatID: treatID,\n      category: category\n    };\n    axios.put(`http://localhost:8080/updatePatient/${patientName}`, value).then(response => {\n      // handle success\n      var resData = response.data;\n      let data = JSON.stringify(resData);\n      window.alert(\"Response recieved from server = \" + data);\n    });\n  }\n\n  function displayPatientHandler() {\n    fetchPatientRecords();\n  }\n\n  function savePatientHandler() {\n    savePatient();\n  }\n\n  function deletePatientHandler() {\n    deletePatient();\n  }\n\n  function updatePatientHandler() {\n    updatePatient();\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Patient Name\",\n    value: patientName,\n    onChange: e => setPatientName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Treatment ID\",\n    value: treatID,\n    onChange: e => setTreatID(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Category\",\n    value: category,\n    onChange: e => setCategory(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: savePatientHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, \"Save Patient\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: deletePatientHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, \"Delete Patient\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: updatePatientHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, \"Update Patient\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, \"Show Patients:\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchPatientRecords.bind(this, resData),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, \"Display Patients\"));\n}\n\nexport default PatientPanel;","map":{"version":3,"sources":["C:/Users/khsam/Documents/React Projects/assignment-two/my-react-app/src/PatientPanel.js"],"names":["React","useEffect","axios","PatientPanel","resData","setData","useState","patientName","setPatientName","treatID","setTreatID","category","setCategory","fetchPatientRecords","get","then","response","data","showDetails","x","savePatient","value","name","post","JSON","stringify","window","alert","deletePatient","delete","updatePatient","put","displayPatientHandler","savePatientHandler","deletePatientHandler","updatePatientHandler","e","target","bind"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction PatientPanel() {\r\n  const [resData, setData] = React.useState([]);\r\n  const [patientName, setPatientName] = React.useState(\"\");\r\n  const [treatID, setTreatID] = React.useState(\"\");\r\n  const [category, setCategory] = React.useState(\"\");\r\n\r\n  function fetchPatientRecords() {\r\n    axios.get(\"http://localhost:8080/patients\").then((response) => {\r\n      // handle success\r\n\r\n      useEffect(() => {\r\n        const resData = response.data;\r\n        setData(resData);\r\n      }, []);\r\n\r\n      // let data = JSON.stringify(resData);\r\n      // window.alert(\"Response recieved from server = \" + data);\r\n    });\r\n    const showDetails = (x) => {\r\n      setPatientName(x);\r\n    };\r\n  }\r\n\r\n  // function showPatientRecords() {\r\n  //   axios.get(\"http://localhost:8080/patients\").then((response) => {\r\n  //     var resData = response.data;\r\n  //     let data = JSON.parse(resData);\r\n  //     const showRecords = data.map((datas) => (\r\n  //       <li>\r\n  //         {datas.name},{datas.treatID},{datas.category}\r\n  //       </li>\r\n  //     ));\r\n  //     //   return showRecords();\r\n  //   });\r\n  // }\r\n\r\n  function savePatient() {\r\n    const value = {\r\n      name: patientName,\r\n      treatID: treatID,\r\n      category: category,\r\n    };\r\n\r\n    axios.post(\"http://localhost:8080/patient\", value).then((response) => {\r\n      // handle success\r\n      var resData = response.data;\r\n      let data = JSON.stringify(resData);\r\n      window.alert(\"Response recieved from server = \" + data);\r\n    });\r\n  }\r\n\r\n  function deletePatient() {\r\n    axios\r\n      .delete(`http://localhost:8080/deletePatient/${patientName}`)\r\n      .then((response) => {\r\n        // handle success\r\n        var resData = response.data;\r\n        let data = JSON.stringify(resData);\r\n        window.alert(\"Response recieved from server = \" + data);\r\n      });\r\n  }\r\n\r\n  function updatePatient() {\r\n    const value = {\r\n      name: patientName,\r\n      treatID: treatID,\r\n      category: category,\r\n    };\r\n    axios\r\n      .put(`http://localhost:8080/updatePatient/${patientName}`, value)\r\n      .then((response) => {\r\n        // handle success\r\n        var resData = response.data;\r\n        let data = JSON.stringify(resData);\r\n        window.alert(\"Response recieved from server = \" + data);\r\n      });\r\n  }\r\n\r\n  function displayPatientHandler() {\r\n    fetchPatientRecords();\r\n  }\r\n\r\n  function savePatientHandler() {\r\n    savePatient();\r\n  }\r\n\r\n  function deletePatientHandler() {\r\n    deletePatient();\r\n  }\r\n\r\n  function updatePatientHandler() {\r\n    updatePatient();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Patient Name\"\r\n        value={patientName}\r\n        onChange={(e) => setPatientName(e.target.value)}\r\n      />\r\n      <br />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Treatment ID\"\r\n        value={treatID}\r\n        onChange={(e) => setTreatID(e.target.value)}\r\n      />\r\n      <br />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Category\"\r\n        value={category}\r\n        onChange={(e) => setCategory(e.target.value)}\r\n      />\r\n      <br />\r\n      <button onClick={savePatientHandler}>Save Patient</button>\r\n      <br />\r\n      <button onClick={deletePatientHandler}>Delete Patient</button>\r\n      <br />\r\n      <button onClick={updatePatientHandler}>Update Patient</button>\r\n      <br />\r\n      <h3>Show Patients:</h3>\r\n      <button onClick={fetchPatientRecords.bind(this, resData)}>\r\n        Display Patients\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientPanel;\r\n"]},"metadata":{},"sourceType":"module"}